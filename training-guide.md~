<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->
**Table of Contents**  *generated with [DocToc](https://github.com/thlorenz/doctoc)*

- [OpenShift v3 Readiness Training (Beta 4)](#openshift-v3-readiness-training-beta-4)
  - [GSS Learning Environment](#gss-learning-environment)
    - [Launching the Environment](#launching-the-environment)
    - [Virtual Machines](#virtual-machines)
    - [Hardware](#hardware)
    - [Software](#software)
    - [Storage](#storage)
    - [Network](#network)
    - [Using your Browser in the Learning Environment](#using-your-browser-in-the-learning-environment)
    - [Container Images](#container-images)
    - [DNS](#dns)
  - [Openshift Enterprise Installation](#openshift-enterprise-installation)
  - [Regions and Zones](#regions-and-zones)
    - [Scheduler and Defaults](#scheduler-and-defaults)
    - [The NodeSelector](#the-nodeselector)
    - [Customizing the Scheduler Configuration](#customizing-the-scheduler-configuration)
    - [Node Labels](#node-labels)
  - [Useful OpenShift Logs](#useful-openshift-logs)
  - [Auth, Projects, and the Web Console](#auth-projects-and-the-web-console)
    - [Configuring htpasswd Authentication](#configuring-htpasswd-authentication)
    - [A Project for Everything](#a-project-for-everything)
    - [Web Console](#web-console)
  - [Your First Application](#your-first-application)
    - [Resources](#resources)
    - [Applying Quota to Projects](#applying-quota-to-projects)
    - [Applying Limit Ranges to Projects](#applying-limit-ranges-to-projects)
    - [Login](#login)
    - [Grab the Training Repo Again](#grab-the-training-repo-again)
    - [The Hello World Definition JSON](#the-hello-world-definition-json)
    - [Run the Pod](#run-the-pod)
    - [Looking at the Pod in the Web Console](#looking-at-the-pod-in-the-web-console)
    - [Quota Usage](#quota-usage)
    - [Extra Credit](#extra-credit)
    - [Delete the Pod](#delete-the-pod)
    - [Quota Enforcement](#quota-enforcement)
  - [Services](#services)
  - [Routing](#routing)
    - [Creating a Wildcard Certificate](#creating-a-wildcard-certificate)
    - [Creating the Router](#creating-the-router)
    - [Router Placement By Region](#router-placement-by-region)
    - [Viewing Router Stats](#viewing-router-stats)
  - [The Complete Pod-Service-Route](#the-complete-pod-service-route)
    - [Creating the Definition](#creating-the-definition)
    - [Project Status](#project-status)
    - [Verifying the Service](#verifying-the-service)
    - [Verifying the Routing](#verifying-the-routing)
    - [The Web Console](#the-web-console)
  - [Project Administration](#project-administration)
    - [Deleting a Project](#deleting-a-project)
  - [Preparing for S2I: the Registry](#preparing-for-s2i-the-registry)
    - [Storage for the registry](#storage-for-the-registry)
    - [Creating the registry](#creating-the-registry)
  - [S2I - What Is It?](#s2i---what-is-it)
    - [Create a New Project](#create-a-new-project)
    - [Switch Projects](#switch-projects)
    - [A Simple Code Example](#a-simple-code-example)
    - [CLI versus Console](#cli-versus-console)
    - [Adding the Builder ImageStreams](#adding-the-builder-imagestreams)
    - [Wait, What's an ImageStream?](#wait-whats-an-imagestream)
    - [Adding Code Via the Web Console](#adding-code-via-the-web-console)
    - [The Web Console Revisited](#the-web-console-revisited)
    - [Examining the Build](#examining-the-build)
    - [Testing the Application](#testing-the-application)
    - [Adding a Route to Our Application](#adding-a-route-to-our-application)
    - [Implications of Quota Enforcement on Scaling](#implications-of-quota-enforcement-on-scaling)
  - [Templates, Instant Apps, and "Quickstarts"](#templates-instant-apps-and-quickstarts)
    - [A Project for the Quickstart](#a-project-for-the-quickstart)
    - [A Quick Aside on Templates](#a-quick-aside-on-templates)
    - [Adding the Template](#adding-the-template)
    - [Create an Instance of the Template](#create-an-instance-of-the-template)
    - [Using Your App](#using-your-app)
  - [Creating and Wiring Disparate Components](#creating-and-wiring-disparate-components)
    - [Create a New Project](#create-a-new-project-1)
    - [Stand Up the Frontend](#stand-up-the-frontend)
    - [Visit Your Application](#visit-your-application)
    - [Create the Database Config](#create-the-database-config)
    - [Visit Your Application Again](#visit-your-application-again)
    - [Replication Controllers](#replication-controllers)
    - [Revisit the Webpage](#revisit-the-webpage)
  - [Using Persistent Storage (Optional)](#using-persistent-storage-optional)
    - [Export an NFS Volume](#export-an-nfs-volume)
    - [NFS Firewall](#nfs-firewall)
    - [Allow NFS Access in SELinux Policy](#allow-nfs-access-in-selinux-policy)
    - [Create a PersistentVolume](#create-a-persistentvolume)
    - [Claim the PersistentVolume](#claim-the-persistentvolume)
    - [Use the Claimed Volume](#use-the-claimed-volume)
    - [Restart the Frontend](#restart-the-frontend)
  - [Rollback/Activate and Code Lifecycle](#rollbackactivate-and-code-lifecycle)
    - [Fork the Repository](#fork-the-repository)
    - [Update the BuildConfig](#update-the-buildconfig)
    - [Change the Code](#change-the-code)
- [ Welcome to an OpenShift v3 Demo App! ](#welcome-to-an-openshift-v3-demo-app)
- [ This is my crustom demo! ](#this-is-my-crustom-demo)
    - [Start a Build with a Webhook](#start-a-build-with-a-webhook)
    - [Rollback](#rollback)
    - [Activate](#activate)
  - [Customized Build and Run Processes](#customized-build-and-run-processes)
    - [Add a Script](#add-a-script)
    - [Kick Off a Build](#kick-off-a-build)
    - [Watch the Build Logs](#watch-the-build-logs)
  - [Lifecycle Pre and Post Deployment Hooks](#lifecycle-pre-and-post-deployment-hooks)
    - [Examining Deployment Hooks](#examining-deployment-hooks)
    - [Modifying the Hooks](#modifying-the-hooks)
    - [Quickly Clean Up](#quickly-clean-up)
    - [Build Again](#build-again)
    - [Verify the Migration](#verify-the-migration)
  - [Arbitrary Docker Image (Builder)](#arbitrary-docker-image-builder)
    - [Create a Project](#create-a-project)
    - [Build Wordpress](#build-wordpress)
    - [Test Your Application](#test-your-application)
    - [Application Resource Labels](#application-resource-labels)
  - [EAP Example](#eap-example)
    - [Create a Project](#create-a-project-1)
    - [Instantiate the Template](#instantiate-the-template)
    - [Update the BuildConfig](#update-the-buildconfig-1)
    - [Watch the Build](#watch-the-build)
    - [Visit Your Application](#visit-your-application-1)
  - [Conclusion](#conclusion)
- [APPENDIX - DNSMasq setup](#appendix---dnsmasq-setup)
    - [Verifying DNSMasq](#verifying-dnsmasq)
- [APPENDIX - LDAP Authentication](#appendix---ldap-authentication)
    - [Prerequirements:](#prerequirements)
    - [Setting up an example LDAP server:](#setting-up-an-example-ldap-server)
    - [Creating the Basic Auth service](#creating-the-basic-auth-service)
    - [Using an LDAP server external to OpenShift](#using-an-ldap-server-external-to-openshift)
    - [Upcoming changes](#upcoming-changes)
- [APPENDIX - Import/Export of Docker Images (Disconnected Use)](#appendix---importexport-of-docker-images-disconnected-use)
- [APPENDIX - Cleaning Up](#appendix---cleaning-up)
- [APPENDIX - Pretty Output](#appendix---pretty-output)
- [APPENDIX - Troubleshooting](#appendix---troubleshooting)
- [APPENDIX - Infrastructure Log Aggregation](#appendix---infrastructure-log-aggregation)
  - [Enable Remote Logging on Master](#enable-remote-logging-on-master)
  - [Enable logging to /var/log/openshift](#enable-logging-to-varlogopenshift)
  - [Configure nodes to send openshift logs to your master](#configure-nodes-to-send-openshift-logs-to-your-master)
  - [Optionally Log Each Node to a unique directory](#optionally-log-each-node-to-a-unique-directory)
- [APPENDIX - JBoss Tools for Eclipse](#appendix---jboss-tools-for-eclipse)
  - [Installation](#installation)
  - [Connecting to the Server](#connecting-to-the-server)
- [APPENDIX - Working with HTTP Proxies](#appendix---working-with-http-proxies)
  - [Importing ImageStreams](#importing-imagestreams)
  - [S2I Builds](#s2i-builds)
  - [Setting Environment Variables in Pods](#setting-environment-variables-in-pods)
  - [Git Repository Access](#git-repository-access)
  - [Proxying Docker Pull](#proxying-docker-pull)
  - [Future Considerations](#future-considerations)
- [APPENDIX - Installing in IaaS Clouds](#appendix---installing-in-iaas-clouds)
  - [Generic Cloud Install](#generic-cloud-install)
  - [Automated AWS Install With Ansible](#automated-aws-install-with-ansible)
- [APPENDIX - Linux, Mac, and Windows clients](#appendix---linux-mac-and-windows-clients)
  - [Downloading The Clients](#downloading-the-clients)
  - [Log In To Your OpenShift Environment](#log-in-to-your-openshift-environment)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->

# OpenShift v3 Readiness Training (Beta 4)
## GSS Learning Environment
### Launching the Environment
This training will use a ravello-based cloud environment.  To manage this environment you will use a CLI called `ravshello`.  See [this Red Hat internal link](https://mojo.redhat.com/docs/DOC-987131) for more information about `ravshello`.

Create a new application from the blueprint **Openshift-v3-Training**

### Virtual Machines
This environment will provide the following virtual machines for your use:

* ose-workstation
* ose-master
* ose-node1
* ose-node2

The *ose-workstation* acts as an ssh jump server for every other machine in the environment.  It also is running bind (named) and the authoritative nameserver for the paas.it domain.

The *ose-master* is a scheduler/orchestrator and the API endpoint for all commands. This is similar to V2's "broker". We are also running the node software on the master.

The nodes *ose-node1* and *ose-node2* function just like in OpenShift 2 -- hosting user applications. The main
difference is that "gears" have been replaced with Docker container instances.
You will learn much more about the inner workings of OpenShift throughout the
rest of the training.

### Hardware
The *ose-master*, *ose-node1* and *ose-node2* each have 4+ GB of memory, and 20 GB of local hard disk space.  Each VM is configured to use a single core vCPU with one vNIC.


### Software
The following software has been installed:

* RHEL >=7.1
* kernel-3.10.0-229.4.2.el7.x86_64 (Note: 7.1 kernel is required for openvswitch)
* "Minimal" installation option
* openshift-0.5.2.2-0
* docker-1.6.2-6
* openvswitch-2.3.1-2
* git

**NOTE**: No machine in this environment is running a desktop (GNOME).

### Storage

The majority of storage requirements are related to Docker and etcd (the data store). Docker configuration has been modified so that every machine in this environment uses lvm thin-pool backed storage:
```
           └─2209 /usr/bin/docker -d --selinux-enabled --insecure-registry 0.0.0.0/0 -s devicemapper --storage-opt dm.fs=xfs --storage-opt dm.thinpooldev=/dev/mapper/docker--vg-docker--pool -b=lbr0 --mtu=1450 --add-registry registry.access.redhat.com
```
Each machine running docker has a separate local storage device `/dev/vdb` 
```
[root@ose-master ~]# lvs -o+devices --all
  LV                  VG              Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert Devices             
  docker-pool         docker-vg       twi-a-t---  5.99g             57.68  8.76                             docker-pool_tdata(0)
  [docker-pool_tdata] docker-vg       Twi-ao----  5.99g                                                     /dev/vdb1(3)        
  [docker-pool_tmeta] docker-vg       ewi-ao---- 12.00m                                                     /dev/vdb1(0)
```
 
etcd stores data in /var.  Although /var isn't configured to be a separate filesystem, there should be plenty of available space:

```
Filesystem                         Size  Used Avail Use% Mounted on
/dev/mapper/rhel_ose--master-root  8.5G  1.5G  7.0G  18% /
```

### Network
All of your VMs should be on the same logical network and be able to access one another.

In almost all cases, when referencing VMs you must use hostnames and the hostnames that you use must match the output of `hostname -f` on each of your nodes. Forward DNS resolution of hostnames is an **absolute requirement**. The learning environment has a pre-configured BIND (named) service running on *ose-workstation* using the following:

FQDN | Static IP 
:--- |:---
ose-workstation.paas.it | 192.168.100.5 
ose-master.paas.it | 192.168.100.2 
ose-node1.paas.it | 192.168.100.3 
ose-node2.paas.it | 192.168.100.4

### Using your Browser in the Learning Environment

There are parts of the training that will require a web browser.  Instead of installing a desktop in the learning environment or using X11 forwarding, establish a SOCKS proxy using ssh and ose-workstation.  Here are the steps:

- First create an ssh socks connection to ose-workstation by adding -D 12345 to the ssh command provided by ravshello:
```
$ ssh -p 10001 root@oseworkstation-kablumopenshifttra-r6fxqfbf.srv.ravcloud.com -D 12345
```
**NOTE**: Leave this connection open while you are using your workstation's local firefox browser.

- Open a new private window in firefox on your local workstation

- In the private window modify firefox settings:  
preferences > advanced > network tab > Configure how Firefox connects to the Internet Settings... >  For SOCKS Host: **localhost** and Port: **12345** > make sure SOCKSv5 and Remote DNS are checked.

![SOCKS](https://github.com/GSS-Training-RedHat/openshiftv3-training/blob/master/socks.png?raw=true "Firefox SOCKS")

**NOTE**: If you do not have the Remote DNS check box (older version of firefox) then you'll need to modify firefox configuration by typing in about:config in the private window.  Look for the config network.proxy.socks_remote_dns and set it to true.

- When you are done, make sure to restore your browser's configuration

Chrome settings (unverified from http://www.adamburvill.com/2014/03/ssh-socks-tunnelling-and-avoiding-dns.html)

 Chrome doesn't use it's own settings for SOCKS proxy but rather uses the OS settings.  To set it up, type chrome://settings in the address bar and click Show Advanced Settings at the bottom:
 Then click Change Proxy Settings > select a protocol to configure > check SOCKS Proxy > put in localhost 12345 > click OK and then Apply - chrome doesn't need extra dns configuration.

### Container Images
Each of the machines running the docker service have several images pulled to speed up the learning activities detailed later.

Here is a listing of these images:
```
REPOSITORY                                                             TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
registry.access.redhat.com/openshift3_beta/ose-haproxy-router          v0.5.2.2            9acca190de9e        12 days ago         301.6 MB
registry.access.redhat.com/openshift3_beta/mysql-55-rhel7              latest              f36a8422c16f        13 days ago         315.5 MB
registry.access.redhat.com/openshift3_beta/ruby-20-rhel7               latest              a3dab3cfce6a        13 days ago         406.7 MB
registry.access.redhat.com/jboss-eap-6/eap-openshift                   latest              68a4c66fa980        2 weeks ago         955.9 MB
registry.access.redhat.com/openshift3_beta/ose-keepalived-ipfailover   v0.5.2.2            30bfc921c977        2 weeks ago         256.6 MB
registry.access.redhat.com/openshift3_beta/ose-docker-registry         v0.5.2.2            b27c54b9ad41        2 weeks ago         305.1 MB
registry.access.redhat.com/openshift3_beta/ose-pod                     v0.5.2.2            8f7b5892c1c3        2 weeks ago         155.9 MB
registry.access.redhat.com/openshift3_beta/ose-sti-image-builder       v0.5.2.2            ad33ee97468d        2 weeks ago         445.4 MB
registry.access.redhat.com/openshift3_beta/ose-sti-builder             v0.5.2.2            63a3596cbba6        2 weeks ago         289.1 MB
registry.access.redhat.com/openshift3_beta/ose-docker-builder          v0.5.2.2            7bbe7d393a79        2 weeks ago         289.1 MB
registry.access.redhat.com/openshift3_beta/ose-deployer                v0.5.2.2            9d1f1b2dd90d        2 weeks ago         289.1 MB
registry.access.redhat.com/openshift3_beta/sti-basicauthurl            latest              364ffcde5a9f        8 weeks ago         219.5 MB
docker.io/openshift/hello-openshift                                    v0.4.3              4dc8820c2f2c        9 weeks ago         5.62 MB
```


### DNS
You will need to have a wildcard for a DNS zone resolve, ultimately, to the IP address of the OpenShift router. For this training, we will ensure that the router will end up on the OpenShift server that is running the master (ose-master). ose-workstation's named service has been configured with the following A record:
```
*.cloudapps.paas.it. 300 IN  A 192.168.100.2
```

## Openshift Enterprise Installation
While the ose installer is being finalized, your learning environment offers a pre-installed ose v3 based on the beta4 software.  Once the environment has started, you should find the following from `ravshello`:
```
  ose-workstation
     State:              STARTED
     Internal DNS Name:  ose-workstation.paas.it
     Internal IPs:       192.168.100.5 (eth0)
     External Ports:     10000/TCP
     SSH Command:        ssh -p 10001 root@oseworkstation-kablumopenshiftv3t-rdnua7xn.srv.ravcloud.com
     VNC Web URL:        https://vnc.ravellosystems.com/vnc?token=bRmTIflkN8OrycaDu6CdRfBBxJcHzceyscl5SeU5GA2kF9PMGZcLHFLXWkg4Esla&mgmt=https%3A%2F%2Fcloud.ravellosystems.com%2F

  ose-node1
     State:              STARTED
     Internal DNS Name:  ose-node1.paas.it
     Internal IPs:       192.168.100.3 (eth0)
     VNC Web URL:        https://vnc.ravellosystems.com/vnc?token=BCrFQJy8d2L1z9MNsk1XhaAGFp6ovaInuqUCSvvArm3x9IRoIzfGbiIVLjTT9Rnz&mgmt=https%3A%2F%2Fcloud.ravellosystems.com%2F

  ose-master
     State:              STARTED
     Internal DNS Name:  ose-master.paas.it
     Internal IPs:       192.168.100.2 (eth0)
     VNC Web URL:        https://vnc.ravellosystems.com/vnc?token=EWZ80DcIiC99Rs1bd5LzRonMN0Tj3olZWHlyg4Fb890HoMYhIP8scx0rmkcVMqKT&mgmt=https%3A%2F%2Fcloud.ravellosystems.com%2F

  ose-node2
     State:              STARTED
     Internal DNS Name:  ose-node2.paas.it
     Internal IPs:       192.168.100.4 (eth0)
     VNC Web URL:        https://vnc.ravellosystems.com/vnc?token=Hq2AqOFs2UCmuQFGy8jyJ0EOxJdoS4RPmMvi66oODxuomTkTLorm4yjZN06k1G1D&mgmt=https%3A%2F%2Fcloud.ravellosystems.com%2F
```
**NOTE:**  The VNC and SSH commands provided by ravshello will be different then the example given above.

Use the SSH command given, to log into ose-workstation:

```
[user1@user1-laptop ~]$ ssh -p 10001 root@oseworkstation-kablumopenshiftv3t-rdnua7xn.srv.ravcloud.com
The authenticity of host '[oseworkstation-kablumopenshiftv3t-rdnua7xn.srv.ravcloud.com]:10000 ([54.147.136.234]:10000)' can't be established.
ECDSA key fingerprint is 80:08:46:5a:8b:31:38:5f:c6:df:23:ce:83:86:b5:9c.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[oseworkstation-kablumopenshiftv3t-rdnua7xn.srv.ravcloud.com]:10000,[54.147.136.234]:10000' (ECDSA) to the list of known hosts.
Last login: Tue Jun 16 15:01:14 2015 from 99-173-149-204.lightspeed.rlghnc.sbcglobal.net
[root@ose-workstation ~]#
```
From ose-workstation, ssh into ose-master:
```
[root@ose-workstation ~]# ssh ose-master
Last login: Tue Jun 16 14:25:29 2015 from ose-workstation.paas.it
[root@ose-master ~]# 
```
Verify that the status of each node is **Ready**
```
[root@ose-master ~]# osc get nodes
NAME                 LABELS                                                                STATUS
ose-master.paas.it   kubernetes.io/hostname=ose-master.paas.it,region=infra,zone=default   Ready
ose-node1.paas.it    kubernetes.io/hostname=ose-node1.paas.it,region=primary,zone=east     Ready
ose-node2.paas.it    kubernetes.io/hostname=ose-node2.paas.it,region=primary,zone=west     Ready
```
**NOTE:** ose-master is functioning as both the master and as a node.  This is not typical of a production ose deployment.

Notice the lables called "regions" and "zones" ? Let's talk about those concepts now.

